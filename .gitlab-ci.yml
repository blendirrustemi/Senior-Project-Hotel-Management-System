image: php:8.2-alpine

before_script:
  - apk update && apk add curl zip unzip tar
  - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
  - composer install --no-interaction --prefer-dist
  - composer require --dev phpunit/phpunit
#  - composer require --dev phpstan/phpstan
  - composer update
  - ls -al build/
  - chmod -R 775 build/

stages:
  - build
  - test
  - code-quality
  - deploy

build:
  stage: build
  script:
    - echo "Building the project..."
#     - php -r "file_put_contents('build/version.txt', date('Y-m-d H:i:s'));"
#     - zip -r build/project.zip . -x "build/*" -x ".git/*"
#   artifacts:
#     expose_as: 'artifact_build'
#     paths: ['build/version.txt']
#     paths: ['build/version.txt', 'build/project.zip']

test:
  stage: test
  script:
    - echo "Running tests... "
    - ./vendor/bin/phpunit --log-junit=build/phpunit-report.xml
#     - ls -al build/
#     - cat build/phpunit-report.xml
  artifacts:
    paths: ['build/phpunit-report.xml']

code-quality:
  stage: code-quality
  script:
    - echo "Running code quality checks... "
#     - ./vendor/bin/phpstan analyze -c phpstan.neon > build/phpstan-report.txt
    - docker run --rm -v $(pwd):/app adamculp/php-code-quality phpstan analyze -c phpstan.neon > build/phpstan-report.txt
  artifacts:
    paths: ['build/phpstan-report.txt']

deploy:
  stage: deploy
  script:
    - echo "Deploying the project... "
    - echo "Generating version.txt file..."
    - echo "$(date +%Y-%m-%d-%H:%M:%S)" > build/version.txt
  artifacts:
    paths: ['build/version.txt']
